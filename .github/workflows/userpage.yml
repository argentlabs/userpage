name: Userpage CI

on:
  workflow_dispatch:
  push:
    branches:
      - develop
      - main
  pull_request:
    branches:
      - develop
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - environment: test
            network: 3
            zksync: https://ropsten-beta-api.zksync.io/api/v0.2
            detector: "0xF230cF8980BaDA094720C01308319eF192F0F311"
            multicall: "0x604D19Ba889A223693B0E78bC1269760B291b9Df"
          - environment: staging
            network: 1
            zksync: https://api.zksync.io/api/v0.2
            detector: "0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8"
            multicall: "0xF34D2Cb31175a51B23fb6e08cA06d7208FaD379F"
          - environment: production
            network: 1
            zksync: https://api.zksync.io/api/v0.2
            detector: "0xeca4B0bDBf7c55E9b7925919d03CbF8Dc82537E8"
            multicall: "0xF34D2Cb31175a51B23fb6e08cA06d7208FaD379F"
    environment: ${{ matrix.environment }}
    env:
      REACT_APP_DESIRED_NETWORK_ID: ${{ matrix.network }}
      REACT_APP_INFURA_KEY: ${{ secrets.INFURA_KEY }}
      REACT_APP_ARGENT_API_ANS_WALLET_ENDPOINT: ${{ secrets.ARGENT_API_ANS_WALLET_ENDPOINT }}
      REACT_APP_ZKSYNC_API_BASE: ${{ matrix.zksync }}
      REACT_APP_ARGENT_DETECTOR_CONTRACT_ADDRESS: ${{ matrix.detector }}
      REACT_APP_MULTICALL_CONTRACT_ADDRESS: ${{ matrix.multicall }}
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"
      - run: yarn install
      - run: yarn build
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.environment }}
          path: build

  test_unit:
    runs-on: ubuntu-latest
    environment: test
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"
      - run: yarn install
      - run: yarn test:unit -u

  test_int:
    runs-on: ubuntu-latest
    environment: test
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"
      - run: yarn install
      - run: yarn test:int

  test_e2e:
    runs-on: ubuntu-latest
    environment: test
    needs: build
    strategy:
      matrix:
        browser:
          - chromium
          - firefox
          - webkit
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: "yarn"
      - name: Install Webkit deps
        run: sudo apt-get update && sudo apt-get install -y libegl1 libopus0 libwoff1 libharfbuzz-icu0 gstreamer1.0-plugins-base libgstreamer-gl1.0-0 gstreamer1.0-plugins-bad libopenjp2-7 libwebpdemux2 libenchant1c2a libhyphen0 libgles2 gstreamer1.0-libav libevdev-tools
        if: ${{ matrix.browser == 'webkit' }}
      - run: yarn install
      - uses: actions/download-artifact@v2
        with:
          name: build-test
          path: build
      - run: yarn e2e:${{ matrix.browser }}
      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: screenshot-${{ matrix.browser }}
          path: test.png

  deploy_s3:
    runs-on: ubuntu-latest
    needs: ["test_e2e", "test_unit", "test_int"]
    strategy:
      matrix:
        environment:
          - test
          - staging
          - production
    environment: ${{ matrix.environment }}
    env:
      S3_BUCKET_NAME: ${{ secrets.S3_BUCKET_NAME }}
      CF_DISTRIBUTION_ID: ${{ secrets.CF_DISTRIBUTION_ID }}
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: build-test
          path: build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          # aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }} # if you have/need it
          aws-region: eu-west-1
      - name: Deploy to S3
        run: aws s3 sync --acl public-read --sse --delete ./build s3://${{env.S3_BUCKET_NAME}}
      - name: Invalidate Cloudfront Cache
        if: ${{ env.CF_DISTRIBUTION_ID > 0 }}
        run: aws cloudfront create-invalidation --distribution-id ${{env.CF_DISTRIBUTION_ID}} --paths '/*'

  dispatch_deploy:
    runs-on: ubuntu-latest
    skip: always()
    needs: ["test_e2e", "test_unit", "test_int"]
    steps:
      - name: Deploy Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: argentlabs/argent-userpage-infra
          event-type: deploy
          client-payload: '{"repository": "${{ github.repository }}", "run_number": "${{ github.run_number }}"}'
